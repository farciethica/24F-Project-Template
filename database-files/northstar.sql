-- drop database northstar;
CREATE DATABASE IF NOT EXISTS northstar;

Use northstar;

-- Table: Advisor
CREATE TABLE IF NOT EXISTS Advisor (
   ID INT PRIMARY KEY AUTO_INCREMENT,
   Name VARCHAR(100),
   UserName VARCHAR(50),
   Email VARCHAR(100)
);


-- Table: Administrator
CREATE TABLE IF NOT EXISTS Administrator (
   ID INT PRIMARY KEY AUTO_INCREMENT,
   Name VARCHAR(100),
   EmailAddress VARCHAR(100),
   UserName VARCHAR(50)
);


-- Table: Student
CREATE TABLE IF NOT EXISTS Student (
   ID INT PRIMARY KEY AUTO_INCREMENT,
   GraduationYear VARCHAR(50),
   Major VARCHAR(50),
   Minor VARCHAR(50),
   EmailAddress VARCHAR(100),
   UserName VARCHAR(50),
   Name VARCHAR(50),
   NumPreviousCoops INT,
   GPA DECIMAL(4, 2),
   AdvisorID INT,
   FOREIGN KEY (AdvisorID) REFERENCES Advisor(ID) ON DELETE SET NULL ON UPDATE CASCADE
);


-- Table: Extracurricular
CREATE TABLE IF NOT EXISTS Extracurricular (
   ActivityID INT PRIMARY KEY AUTO_INCREMENT,
   Name VARCHAR(100),
   Type VARCHAR(50),
   LeadershipYN CHAR(1) CHECK (LeadershipYN IN ('Y', 'N')),
   StudentID INT, -- Ensure this references the Student table
   FOREIGN KEY (StudentID) REFERENCES Student(ID) ON DELETE CASCADE ON UPDATE CASCADE
);



-- Table: Co_op
CREATE TABLE IF NOT EXISTS Co_op (
   CoOpID INT PRIMARY KEY AUTO_INCREMENT,
   RoleName VARCHAR(100),
   InterviewRounds INT,
   DifficultyRating DECIMAL(2, 1),
   AdminID INT,
   Industry VARCHAR(100),
   FOREIGN KEY (AdminID) REFERENCES Administrator(ID) ON DELETE SET NULL ON UPDATE CASCADE
);


-- Table: Student_Notes
CREATE TABLE IF NOT EXISTS Student_Notes (
   NoteID INT PRIMARY KEY AUTO_INCREMENT,
   StudentID INT,
   Summary TEXT,
   DatePublished DATE,
   CoOpID INT,
   AdminID INT,
   FOREIGN KEY (StudentID) REFERENCES Student(ID) ON DELETE CASCADE ON UPDATE CASCADE,
   FOREIGN KEY (CoOpID) REFERENCES Co_op(CoOpID) ON DELETE CASCADE ON UPDATE CASCADE,
   FOREIGN KEY (AdminID) REFERENCES Administrator(ID) ON DELETE SET NULL ON UPDATE CASCADE
);


-- Table: Co_op_Student
CREATE TABLE IF NOT EXISTS Co_op_Student
(
   StudentID INT,
   CoOpID    INT,
   PRIMARY KEY (StudentID, CoOpID),
   FOREIGN KEY (StudentID) REFERENCES Student (ID) ON DELETE CASCADE ON UPDATE CASCADE,
   FOREIGN KEY (CoOpID) REFERENCES Co_op (CoOpID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: Co_op_Adv
CREATE TABLE IF NOT EXISTS Co_op_Adv (
   AdvID INT,
   CoOpID INT,
   PRIMARY KEY (AdvID, CoOpID),
   FOREIGN KEY (AdvID) REFERENCES Advisor(ID) ON DELETE CASCADE ON UPDATE CASCADE,
   FOREIGN KEY (CoOpID) REFERENCES Co_op(CoOpID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: Company
CREATE TABLE IF NOT EXISTS Company (
   CompanyID INT PRIMARY KEY AUTO_INCREMENT,
   CompanyName VARCHAR(100),
   CompanyAddress TEXT,
   Sector VARCHAR(50)
);


-- Table: Company_Co_op
CREATE TABLE IF NOT EXISTS Company_Co_op (
   CompanyID INT,
   CoOpID INT,
   PRIMARY KEY (CompanyID, CoOpID),
   FOREIGN KEY (CompanyID) REFERENCES Company(CompanyID) ON DELETE CASCADE ON UPDATE  CASCADE,
   FOREIGN KEY (CoOpID) REFERENCES Co_op(CoOpID) ON DELETE CASCADE ON UPDATE CASCADE
);